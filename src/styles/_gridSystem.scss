@use "./responsive" as *;
@use "sass:math";

@mixin setColumnWidth($columnNumber, $maxColumns, $gutter) {
  $columnDifference: calc(#{$maxColumns} - #{$columnNumber});
  $gutters: calc(#{$gutter} * #{$columnDifference} / #{$maxColumns});
  $columnsDividedColumnNumber: calc(#{$maxColumns} / #{$columnNumber});
  width: calc((100% / #{$columnsDividedColumnNumber}) - #{$gutters});
}

@mixin rowBasics($maxWidth) {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  max-width: $maxWidth;
}

@mixin grid($maxWidth, $columns, $gutter, $classExtension) {
  .row-#{$classExtension},
  .row {
    @include rowBasics($maxWidth);
    justify-content: space-between;
  }

  .row-justify-end-#{$classExtension},
  .row-justify-end {
    @include rowBasics($maxWidth);
    justify-content: flex-end;
  }

  .row-justify-center-#{$classExtension},
  .row-justify-center {
    @include rowBasics($maxWidth);
    justify-content: center;
  }

  .row-reverse-#{$classExtension},
  .row-reverse {
    @include rowBasics($maxWidth);
    flex-direction: row-reverse;
  }

  .column-reverse-#{$classExtension},
  .column-reverse {
    @include rowBasics($maxWidth);
    flex-direction: column-reverse;
  }

  .col-1-#{$classExtension}, .col-1 {
    @include setColumnWidth(1, $columns, $gutter);
  }
  .col-2-#{$classExtension}, .col-2 {
    @include setColumnWidth(2, $columns, $gutter);
  }
  .col-3-#{$classExtension}, .col-3 {
    @include setColumnWidth(3, $columns, $gutter);
  }
  .col-4-#{$classExtension}, .col-4 {
    @include setColumnWidth(4, $columns, $gutter);
  }
  .col-5-#{$classExtension}, .col-5 {
    @include setColumnWidth(5, $columns, $gutter);
  }
  .col-6-#{$classExtension}, .col-6 {
    @include setColumnWidth(6, $columns, $gutter);
  }
  .col-7-#{$classExtension}, .col-7 {
    @include setColumnWidth(7, $columns, $gutter);
  }
  .col-8-#{$classExtension}, .col-8 {
    @include setColumnWidth(8, $columns, $gutter);
  }
  .col-9-#{$classExtension}, .col-9 {
    @include setColumnWidth(9, $columns, $gutter);
  }
  .col-10-#{$classExtension}, .col-10 {
    @include setColumnWidth(10, $columns, $gutter);
  }
  .col-11-#{$classExtension}, .col-11 {
    @include setColumnWidth(11, $columns, $gutter);
  }
  .col-12-#{$classExtension}, .col-12 {
    width: 100%;
  }
}

@mixin gridMobile {
  $smallGridWidth: calc(100% - #{$mobileGridMargin} * 2);
  @include grid($smallGridWidth, 2, rem(24px), "sm");
}

@mixin gridTablet {
  $tabletGridWidth: calc(100% - #{$tabletGridMargin} * 2);
  @include grid($tabletGridWidth, 12, rem(32px), "md");
}

@mixin gridDesktop {
  @include grid($desktopRems, 12, rem(32px), "lg");
}

.row-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;

  @include mobileOnly{
    @include gridMobile;
  }

  @include tabletOnly {
    @include gridTablet;
  }

  @include desktopOnly {
    @include gridDesktop;
  }
}
